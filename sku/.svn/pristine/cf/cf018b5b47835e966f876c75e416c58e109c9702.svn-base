package com.jingpaidang.toolSystem.util;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;


import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;
/**
 * Created with IntelliJ IDEA.
 * User: Administrator
 * Date: 13-7-16
 * Time: 上午10:52
 * To change this template use File | Settings | File Templates.
 */


public class JdbcUtil {
    private static String driver = "sun.jdbc.odbc.JdbcOdbcDriver";
    private String url = "jdbc:mysql://localhost:3306/sample_db?user=root&password=root123";
   // private String username = "root";
   // private String password = "root123";
    private static Context ctx;
    private Connection connection;
    private PreparedStatement pstm;
    private ResultSet rs;

    //加载数据库驱动
    static{
        try {
            ctx =new InitialContext();
            //Class.forName(driver);

        } catch (NamingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    //获取数据库连接对象
    public Connection getConnection(){
        try {
            DataSource ds=(DataSource)ctx.lookup("java:/comp/env/jdbc/myoracleds");
            connection=ds.getConnection();
            //connection=DriverManager.getConnection(url,username,password);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return connection;

    }
    //对数据库增、删，改操作
    public boolean updateByPrearedStatement(String sql,List<Object> params){
        boolean flag=false;
        try {
            pstm=connection.prepareStatement(sql);
            if(params!=null && params.size()>0){
                for(int i=0;i<params.size();i++){
                    pstm.setObject(i+1, params.get(i));
                }
            }
            int rownum=pstm.executeUpdate();
            if(rownum > 0){
                flag=true;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return flag;

    }

    //查询数据库
    public ResultSet queryByPreparedStatement(String sql,List<Object> params){
        try {
            pstm=connection.prepareStatement(sql);
            if(params!=null && params.size()>0){
                for(int i=0;i<params.size();i++){
                    pstm.setObject(i+1, params.get(i));
                }
            }
            rs=pstm.executeQuery();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return rs;
    }
    //关闭数据库资源
    public void close(){
        if(connection!=null){
            try {
                if(rs!=null){
                    rs.close();
                }
                if(pstm!=null){
                    pstm.close();
                }
                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

}
